//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.03.29 at 02:15:37 AM MSK 
//


package by.training.taskxml.entity.tariffs;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the by.training.tariffs package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Tariff_QNAME = new QName("http://www.training.by/tariffs", "tariff");
    private final static QName _Internet_QNAME = new QName("http://www.training.by/tariffs", "internet");
    private final static QName _OnlyCalls_QNAME = new QName("http://www.training.by/tariffs", "only_calls");
    private final static QName _Smartphone_QNAME = new QName("http://www.training.by/tariffs", "smartphone");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: by.training.tariffs
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Smartphone }
     * 
     */
    public Smartphone createSmartphone() {
        return new Smartphone();
    }

    /**
     * Create an instance of {@link TariffType }
     * 
     */
    public TariffType createTariffType() {
        return new TariffType();
    }

    /**
     * Create an instance of {@link Internet }
     * 
     */
    public Internet createInternet() {
        return new Internet();
    }

    /**
     * Create an instance of {@link Tariffs }
     * 
     */
    public Tariffs createTariffs() {
        return new Tariffs();
    }

    /**
     * Create an instance of {@link OnlyCalls }
     * 
     */
    public OnlyCalls createOnlyCalls() {
        return new OnlyCalls();
    }

    /**
     * Create an instance of {@link Parameters }
     * 
     */
    public Parameters createParameters() {
        return new Parameters();
    }

    /**
     * Create an instance of {@link CallPrices }
     * 
     */
    public CallPrices createCallPrices() {
        return new CallPrices();
    }

    /**
     * Create an instance of {@link DateType }
     * 
     */
    public DateType createDate() {
        return new DateType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TariffType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.training.by/tariffs", name = "tariff")
    public JAXBElement<TariffType> createTariff(TariffType value) {
        return new JAXBElement<TariffType>(_Tariff_QNAME, TariffType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Internet }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.training.by/tariffs", name = "internet", substitutionHeadNamespace = "http://www.training.by/tariffs", substitutionHeadName = "tariff")
    public JAXBElement<Internet> createInternet(Internet value) {
        return new JAXBElement<Internet>(_Internet_QNAME, Internet.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OnlyCalls }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.training.by/tariffs", name = "only_calls", substitutionHeadNamespace = "http://www.training.by/tariffs", substitutionHeadName = "tariff")
    public JAXBElement<OnlyCalls> createOnlyCalls(OnlyCalls value) {
        return new JAXBElement<OnlyCalls>(_OnlyCalls_QNAME, OnlyCalls.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Smartphone }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.training.by/tariffs", name = "smartphone", substitutionHeadNamespace = "http://www.training.by/tariffs", substitutionHeadName = "tariff")
    public JAXBElement<Smartphone> createSmartphone(Smartphone value) {
        return new JAXBElement<Smartphone>(_Smartphone_QNAME, Smartphone.class, null, value);
    }

}
